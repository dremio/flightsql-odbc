{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "744cf944_c8664dfb",
        "filename": "odbcabstraction/include/odbcabstraction/logger.h",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2022-08-02T17:05:09Z",
      "side": 1,
      "message": "Not sure where this is coming from.",
      "revId": "5d37d413d772c71722bfee015ba4514ad211365f",
      "serverId": "8ca9cf2d-83f4-421d-8552-b009c9e056de"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd34a80d_3fceedfc",
        "filename": "odbcabstraction/include/odbcabstraction/logger.h",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-08-02T20:15:27Z",
      "side": 1,
      "message": "It\u0027s already used on other files. It\u0027s mentioned on vcpkg",
      "parentUuid": "744cf944_c8664dfb",
      "revId": "5d37d413d772c71722bfee015ba4514ad211365f",
      "serverId": "8ca9cf2d-83f4-421d-8552-b009c9e056de"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31dd4cac_7e1b37f2",
        "filename": "odbcabstraction/include/odbcabstraction/logger.h",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2022-08-02T20:37:11Z",
      "side": 1,
      "message": "But the question is why does this header need to include it? Same with \u003ccstdint\u003e and \u003cmap\u003e",
      "parentUuid": "cd34a80d_3fceedfc",
      "revId": "5d37d413d772c71722bfee015ba4514ad211365f",
      "serverId": "8ca9cf2d-83f4-421d-8552-b009c9e056de"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e599509_57cdd10c",
        "filename": "odbcabstraction/include/odbcabstraction/logger.h",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-08-02T23:06:10Z",
      "side": 1,
      "message": "Oh I see, there was actually no need of them",
      "parentUuid": "31dd4cac_7e1b37f2",
      "revId": "5d37d413d772c71722bfee015ba4514ad211365f",
      "serverId": "8ca9cf2d-83f4-421d-8552-b009c9e056de"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a8c4250_f5b1598a",
        "filename": "odbcabstraction/include/odbcabstraction/logger.h",
        "patchSetId": 9
      },
      "lineNbr": 51,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2022-08-02T17:05:09Z",
      "side": 1,
      "message": "I\u0027m not really clear why this is more lazy than what was happening before.\nHowever I do think this is on the right track as an optimization.\n\nHow about this -- change the virtual log() to take in a string lambda instead of a message. Then the implementation can choose whether to run the lambda.\n\nThen we can remove checkLogLevel(), since its implicit in log() whether logging should be done and if the lambda gets run.\n\nAlso, let\u0027s change the semantics such that if logging is off, the global logger is just set to nullptr so we can just check if GetInstance() is null... that\u0027s quicker than a virtual function call.",
      "revId": "5d37d413d772c71722bfee015ba4514ad211365f",
      "serverId": "8ca9cf2d-83f4-421d-8552-b009c9e056de"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c20159f5_e272cd3a",
        "filename": "odbcabstraction/include/odbcabstraction/logger.h",
        "patchSetId": 9
      },
      "lineNbr": 51,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-08-02T20:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a8c4250_f5b1598a",
      "revId": "5d37d413d772c71722bfee015ba4514ad211365f",
      "serverId": "8ca9cf2d-83f4-421d-8552-b009c9e056de"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f3864ec_0ef51f38",
        "filename": "odbcabstraction/include/odbcabstraction/utils.h",
        "patchSetId": 9
      },
      "lineNbr": 47,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2022-08-02T17:05:09Z",
      "side": 1,
      "message": "We also need to deal with masking of secure info like connection strings.",
      "revId": "5d37d413d772c71722bfee015ba4514ad211365f",
      "serverId": "8ca9cf2d-83f4-421d-8552-b009c9e056de"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03d02daa_bd4a18ae",
        "filename": "odbcabstraction/include/odbcabstraction/utils.h",
        "patchSetId": 9
      },
      "lineNbr": 47,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-08-02T20:15:27Z",
      "side": 1,
      "message": "Leaving this to the next patch",
      "parentUuid": "1f3864ec_0ef51f38",
      "revId": "5d37d413d772c71722bfee015ba4514ad211365f",
      "serverId": "8ca9cf2d-83f4-421d-8552-b009c9e056de"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f58f2931_7f4ee165",
        "filename": "odbcabstraction/include/odbcabstraction/utils.h",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2022-08-02T17:05:09Z",
      "side": 1,
      "message": "This will not work. size_t is unsigned.",
      "revId": "5d37d413d772c71722bfee015ba4514ad211365f",
      "serverId": "8ca9cf2d-83f4-421d-8552-b009c9e056de"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1906ea1_a3a23093",
        "filename": "odbcabstraction/include/odbcabstraction/utils.h",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-08-02T20:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f58f2931_7f4ee165",
      "revId": "5d37d413d772c71722bfee015ba4514ad211365f",
      "serverId": "8ca9cf2d-83f4-421d-8552-b009c9e056de"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b03970e8_94ac8139",
        "filename": "odbcabstraction/include/odbcabstraction/utils.h",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1000033
      },
      "writtenOn": "2022-08-02T17:05:09Z",
      "side": 1,
      "message": "This template won\u0027t construct the string correctly for types other than char* since std::string only has a constructor for char*.\n\nIf this is intended to be used for SQLCHAR, it needs a cast.\nIf this is intended to be used for SQLWCHAR, it needs to deal with encoding and also needs to deal with whether the input length is in bytes or not.",
      "revId": "5d37d413d772c71722bfee015ba4514ad211365f",
      "serverId": "8ca9cf2d-83f4-421d-8552-b009c9e056de"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b763511f_9afa103d",
        "filename": "odbcabstraction/include/odbcabstraction/utils.h",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-08-02T20:15:27Z",
      "side": 1,
      "message": "Leaving this to the next patch",
      "parentUuid": "b03970e8_94ac8139",
      "revId": "5d37d413d772c71722bfee015ba4514ad211365f",
      "serverId": "8ca9cf2d-83f4-421d-8552-b009c9e056de"
    }
  ]
}